/**
 *******************************************************************************
 * @ Plik    BH1750.c
 * @ Autor   Bartlomiej Kusmierczyk
 * @ Wersja  V1.0
 * @ Data    11 wrzesnia 2015
 * @ Opis    Ten plik zawiera funkcje do obslugi sensora natezenia oswietlenia
 * 			 BH1750.
 *******************************************************************************
 */

/*-------------------------------------------------------------------*/
#include <avr/io.h>
#include <util/delay.h>
#include "BH1750.h"
#include "../I2C/I2C.h"
/*-------------------------------------------------------------------*/

uint8_t state_;			/* Stan aktywnosci modulu*/
uint8_t mode_;			/* Wybrany tryb pomiaru */


/**
 * @ Opis:				Wyprowadza modul ze stanu uspienia.
 * @ Parametry:  		Brak.
 * @ Zwracana wartosc: 	Brak.
 */
void BH1750_PowerOn()
{
	_delay_us(5);
	state_ = BH1750_Power_ON;
	TWI_Start();
	TWI_Write_SLA(BH1750_SLA);
	TWI_WriteByte(BH1750_Power_ON);
	TWI_Stop();
}


/**
 * @ Opis:				Wprowadza uklad w stan uspienia.
 * @ Parametry:  		Brak.
 * @ Zwracana wartosc: 	Brak.
 */
void BH1750_PowerDown()
{
	state_ = BH1750_Power_OFF;
	TWI_Start();
	TWI_Write_SLA(BH1750_SLA);
	TWI_WriteByte(BH1750_Power_OFF);
	TWI_Stop();
}


/**
 * @ Opis:				Inicjalizuje modul HTU21D.
 * @ Parametry:  		mode: tryb pomiaru.
 * @ Zwracana wartosc: 	Brak.
 */
void BH1750_Start(uint8_t mode)
{
	mode_ = mode;
	TWI_Start();
	TWI_Write_SLA(BH1750_SLA);
	TWI_WriteByte(mode_);
	TWI_Stop();
}


/**
 * @ Opis:				Odczytuje wynik pomiaru.
 * @ Parametry:  		Brak.
 * @ Zwracana wartosc: 	Natezenie oswietlenia w luksach.
 */
uint16_t BH1750_Read()
{
	uint32_t result;
	uint8_t msb, lsb;
	uint16_t illuminance = 0;

	/* Odczyt wyniku z rejestru */
	TWI_Start();
	TWI_Write_SLA(BH1750_SLA + 1);
	msb = TWI_ReadByte_ACK();
	lsb = TWI_ReadByte_NACK();
	TWI_Stop();

	/* Konwersja na fizyczne jednostki */
	result = ((msb << 8) | lsb) * 10;
	illuminance = (uint16_t)(result / 12);

	/* Zaokraglenie wyniku */
	if(((mode_ == BH1750_CHR_MODE2) || (mode_ == BH1750_OTHR_MODE2)) && ((result % 12 ) >= 6))
	{
		illuminance++;
	}

	return illuminance;
}

/**
 * @ Opis:				Resetuje rejest danych. Na koncu wprowadza modul w stan uspienia.
 * @ Parametry:  		Brak.
 * @ Zwracana wartosc: 	Brak.
 */
void BH1750_ResetDR()
{

	if(state_ == BH1750_Power_OFF) BH1750_PowerOn();

	/* Wyslanie komendy */
	TWI_Start();
	TWI_Write_SLA(BH1750_SLA);
	TWI_WriteByte(BH1750_RESET);
	TWI_Stop();

	BH1750_PowerDown();
}

